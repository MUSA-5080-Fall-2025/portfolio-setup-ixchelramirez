{
  "hash": "ec0d1d50703297b350d7a6a323e4b2e5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Assignment 2: Spatial Analysis and Visualization\"\nsubtitle: \"Healthcare Access and Equity in Pennsylvania\"\nauthor: \"Ixchel Ramirez\"\ndate: \"October 19, 2025\"\nformat: \n  html:\n    code-fold: false\n    toc: true\n    toc-location: left\n    theme: cosmo\n    embed-resources: true\nexecute:\n  warning: false\n  message: false\n---\n\n## Part 1: Healthcare Access for Vulnerable Populations\n\n### Research Question\n\n**Which Pennsylvania counties have the highest proportion of vulnerable populations (elderly + low-income) living far from hospitals?**\n\nYour analysis should identify counties that should be priorities for healthcare investment and policy intervention.\n\n### Required Analysis Steps\n\nComplete the following analysis, documenting each step with code and brief explanations:\n\n#### Step 1: Data Collection (5 points)\n\nLoad the required spatial data:\n- Pennsylvania county boundaries\n- Pennsylvania hospitals (from lecture data)\n- Pennsylvania census tracts\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(tidyverse)\nlibrary(tidycensus)\nlibrary(tigris)\nlibrary(knitr)\nlibrary(sf)\nlibrary(dplyr)\n\n# Load spatial data\npa_counties <- st_read(\"C:/Users/ixche/Desktop/PPA/MUSA-5080-Fall-2025/lectures/week-04/data/Pennsylvania_County_Boundaries.shp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Pennsylvania_County_Boundaries' from data source \n  `C:\\Users\\ixche\\Desktop\\PPA\\MUSA-5080-Fall-2025\\lectures\\week-04\\data\\Pennsylvania_County_Boundaries.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 67 features and 19 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -8963377 ymin: 4825316 xmax: -8314404 ymax: 5201413\nProjected CRS: WGS 84 / Pseudo-Mercator\n```\n\n\n:::\n\n```{.r .cell-code}\ncensus_tracts <- tracts(state = \"PA\", cb = TRUE, progress = FALSE)\nmetro_areas <- core_based_statistical_areas(cb = TRUE, progress = FALSE)\n# Read GeoJSON\ndistricts <- st_read(\"C:/Users/ixche/Desktop/PPA/MUSA-5080-Fall-2025/lectures/week-04/data/districts.geojson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `U.S._Congressional_Districts_for_Pennsylvania' from data source \n  `C:\\Users\\ixche\\Desktop\\PPA\\MUSA-5080-Fall-2025\\lectures\\week-04\\data\\districts.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 17 features and 8 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -80.51939 ymin: 39.71986 xmax: -74.68956 ymax: 42.26935\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nhospitals <- st_read(\"C:/Users/ixche/Desktop/PPA/MUSA-5080-Fall-2025/lectures/week-04/data/hospitals.geojson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `hospitals' from data source \n  `C:\\Users\\ixche\\Desktop\\PPA\\MUSA-5080-Fall-2025\\lectures\\week-04\\data\\hospitals.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 223 features and 11 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -80.49621 ymin: 39.75163 xmax: -74.86704 ymax: 42.13403\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check that all data loaded correctly\nst_geometry(pa_counties)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeometry set for 67 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -8963377 ymin: 4825316 xmax: -8314404 ymax: 5201413\nProjected CRS: WGS 84 / Pseudo-Mercator\nFirst 5 geometries:\n```\n\n\n:::\n\n```{.r .cell-code}\nst_geometry(hospitals)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeometry set for 223 features \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -80.49621 ymin: 39.75163 xmax: -74.86704 ymax: 42.13403\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n```\n\n\n:::\n\n```{.r .cell-code}\nhospitals <- hospitals %>%\n  st_transform(st_crs(pa_counties))\ncensus_tracts <- census_tracts %>% \n  st_transform(st_crs(pa_counties))\ndistricts <- districts%>%\n  st_transform(st_crs(census_tracts))\n\nggplot(pa_counties) +\n  geom_sf() +\n  labs(title = \"PA Counties\") +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](Ramirez_Ixchel_assignment2_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(census_tracts) +\n  geom_sf() +\n  labs(title = \"PA Census Tracts\") +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](Ramirez_Ixchel_assignment2_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(districts) +\n  geom_sf() +\n  labs(title = \"PA districts\") +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](Ramirez_Ixchel_assignment2_files/figure-html/unnamed-chunk-1-3.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(hospitals) +\n  geom_sf() +\n  labs(title = \"Hospitals\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Ramirez_Ixchel_assignment2_files/figure-html/unnamed-chunk-1-4.png){width=672}\n:::\n:::\n\n\n**Questions to answer:**\n- How many hospitals are in your dataset? There are 223 hospitals in my dataset.\n- How many census tracts? There are 3445 census tracts in Pennsylvania.\n- What coordinate reference system is each dataset in? The pa_counties is is WGS 84 / Pseudo-Mercator which all datasets have been projeted to.\n\n---\n\n#### Step 2: Get Demographic Data \n\n**Required variables:**\n- Total population\n- Median household income\n- Population 65 years and over (you may need to sum multiple age categories)\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get demographic data from ACS\n\npa_vars <- c(\n  total_pop = \"B01001_001\",    # Total population\n  med_income = \"B19013_001\",   # Median household income\n  male_65_66 = \"B01001_020\",\n  male_67_69 = \"B01001_021\",\n  male_70_74 = \"B01001_022\",\n  male_75_79 = \"B01001_023\",\n  male_80_84 = \"B01001_024\",\n  male_85plus = \"B01001_025\",\n  female_65_66 = \"B01001_044\",\n  female_67_69 = \"B01001_045\",\n  female_70_74 = \"B01001_046\",\n  female_75_79 = \"B01001_047\",\n  female_80_84 = \"B01001_048\",\n  female_85plus = \"B01001_049\"\n)\n\npa_tracts_raw <- get_acs(\n  geography = \"tract\",\n  state = \"PA\",\n  variables = pa_vars,\n  year = 2022,\n  geometry = TRUE\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=====                                                                 |   8%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |==========                                                            |  14%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |==============                                                        |  20%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |===================                                                   |  27%\n  |                                                                            \n  |=====================                                                 |  30%\n  |                                                                            \n  |=======================                                               |  32%\n  |                                                                            \n  |=========================                                             |  35%\n  |                                                                            \n  |===========================                                           |  38%\n  |                                                                            \n  |============================                                          |  40%\n  |                                                                            \n  |==============================                                        |  43%\n  |                                                                            \n  |================================                                      |  46%\n  |                                                                            \n  |==================================                                    |  48%\n  |                                                                            \n  |====================================                                  |  51%\n  |                                                                            \n  |======================================                                |  54%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |=========================================                             |  59%\n  |                                                                            \n  |===========================================                           |  62%\n  |                                                                            \n  |=============================================                         |  64%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |================================================                      |  69%\n  |                                                                            \n  |===================================================                   |  74%\n  |                                                                            \n  |======================================================                |  77%\n  |                                                                            \n  |========================================================              |  79%\n  |                                                                            \n  |========================================================              |  80%\n  |                                                                            \n  |==========================================================            |  82%\n  |                                                                            \n  |============================================================          |  85%\n  |                                                                            \n  |==============================================================        |  88%\n  |                                                                            \n  |===============================================================       |  90%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |===================================================================   |  96%\n  |                                                                            \n  |===================================================================== |  98%\n  |                                                                            \n  |======================================================================| 100%\n```\n\n\n:::\n\n```{.r .cell-code}\npa_tracts <- pa_tracts_raw %>%\n  select(GEOID, variable, estimate, geometry) %>%\n  pivot_wider(names_from = variable, values_from = estimate) %>%\n  mutate(\n    pop_65plus = male_65_66 + male_67_69 + male_70_74 + male_75_79 + male_80_84 + male_85plus +\n                 female_65_66 + female_67_69 + female_70_74 + female_75_79 + female_80_84 + female_85plus,\n    pct_65plus = 100 * pop_65plus / total_pop\n  ) %>%\n  st_as_sf()\n\n\nglimpse(pa_tracts)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 3,446\nColumns: 18\n$ GEOID         <chr> \"42001031101\", \"42013100400\", \"42013100300\", \"4201310080…\n$ geometry      <MULTIPOLYGON [°]> MULTIPOLYGON (((-77.03108 3..., MULTIPOLYGO…\n$ total_pop     <dbl> 5070, 1589, 2873, 1860, 4816, 3464, 6459, 2981, 3997, 34…\n$ male_65_66    <dbl> 56, 24, 0, 27, 15, 12, 81, 8, 0, 63, 74, 75, 36, 66, 60,…\n$ male_67_69    <dbl> 145, 52, 48, 24, 22, 70, 81, 41, 29, 39, 75, 91, 22, 94,…\n$ male_70_74    <dbl> 68, 24, 55, 27, 283, 59, 331, 89, 33, 12, 237, 119, 20, …\n$ male_75_79    <dbl> 60, 28, 7, 25, 110, 17, 144, 75, 37, 23, 17, 57, 50, 60,…\n$ male_80_84    <dbl> 57, 0, 0, 10, 34, 7, 82, 32, 20, 0, 0, 91, 20, 18, 11, 3…\n$ male_85plus   <dbl> 52, 0, 8, 5, 0, 28, 178, 10, 0, 0, 17, 280, 114, 10, 12,…\n$ female_65_66  <dbl> 43, 0, 41, 27, 10, 51, 69, 26, 0, 75, 102, 48, 5, 55, 52…\n$ female_67_69  <dbl> 141, 45, 51, 28, 17, 27, 314, 71, 64, 16, 109, 28, 37, 6…\n$ female_70_74  <dbl> 155, 19, 112, 20, 190, 160, 292, 96, 57, 3, 114, 270, 40…\n$ female_75_79  <dbl> 48, 20, 32, 38, 56, 43, 106, 32, 67, 91, 121, 131, 102, …\n$ female_80_84  <dbl> 62, 15, 15, 10, 0, 54, 185, 73, 0, 14, 0, 264, 49, 27, 1…\n$ female_85plus <dbl> 59, 11, 13, 41, 67, 77, 78, 6, 134, 6, 64, 204, 99, 8, 1…\n$ med_income    <dbl> 61847, 67120, 47091, 64583, 21631, 60750, 90603, 97333, …\n$ pop_65plus    <dbl> 946, 238, 382, 282, 804, 605, 1941, 559, 441, 342, 930, …\n$ pct_65plus    <dbl> 18.658777, 14.977974, 13.296206, 15.161290, 16.694352, 1…\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(pa_tracts$med_income)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n  11558   55924   70188   77527   93287  250001      63 \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(pa_tracts$pct_65plus)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n   0.00   14.26   18.95   19.03   23.11  100.00      32 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Join to tract boundaries\n\n\nsum(is.na(pa_tracts$med_income))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 63\n```\n\n\n:::\n\n```{.r .cell-code}\nmedian(pa_tracts$med_income, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 70188\n```\n\n\n:::\n:::\n\n\n**Questions to answer:**\n- What year of ACS data are you using? I am using **2022 5 Year Estimates ACS data**\n- How many tracts have missing income data? **63** tracts have missing median income data.\n- What is the median income across all PA census tracts? The median income accross PA census tracts is **\\$70,188**.\n\n---\n\n#### Step 3: Define Vulnerable Populations \n\nIdentify census tracts with vulnerable populations based on TWO criteria:\n1. Low median household income (choose an appropriate threshold)\n2. Significant elderly population (choose an appropriate threshold)\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter for vulnerable tracts based on your criteria\n\nincome_threshold <- 56000\nelderly_threshold <- 0.25 \n\ncat(\"Income threshold (fixed):\", income_threshold, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nIncome threshold (fixed): 56000 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Elderly threshold (fixed):\", elderly_threshold, \"%\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nElderly threshold (fixed): 0.25 %\n```\n\n\n:::\n\n```{.r .cell-code}\n# Classify tracts based on both criteria\npa_tracts_vulnerable <- pa_tracts %>%\n  mutate(\n    low_income = med_income <= income_threshold,\n    high_elderly = pct_65plus >= elderly_threshold,\n    vulnerable = if_else(low_income & high_elderly, TRUE, FALSE)\n  )\n\n# Count how many tracts meet each condition\npa_tracts_vulnerable %>%\n  st_drop_geometry() %>%\n  summarise(\n    n_low_income = sum(low_income, na.rm = TRUE),\n    n_high_elderly = sum(high_elderly, na.rm = TRUE),\n    n_vulnerable = sum(vulnerable, na.rm = TRUE)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  n_low_income n_high_elderly n_vulnerable\n         <int>          <int>        <int>\n1          850           3401          850\n```\n\n\n:::\n:::\n\n\n**Questions to answer:**\n- What income threshold did you choose and why? \nI used **$56000** as the threshold for income because it is about twenty percent below the median income.\n- What elderly population threshold did you choose and why? \nI defined the elderly population threshold as areas with more than 25% of residents who are elderly as this is a significant population within a community who would benefit from being near a hospital even through it is less than a majority.  \n- How many tracts meet your vulnerability criteria?\n850 tracts meet this vulnerability criteria (both thresholds).\n- What percentage of PA census tracts are considered vulnerable by your definition?\nThe percentage of vulnerable PA census tracts is **24.67%**.\n---\n\n#### Step 4: Calculate Distance to Hospitals \n\nFor each vulnerable tract, calculate the distance to the nearest hospital.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Use projected CRS in feet\ntarget_crs <- 2272  # Pennsylvania South (ft)\npa_tracts_vulnerable_proj <- st_transform(pa_tracts_vulnerable, target_crs)\nhospitals_proj <- st_transform(hospitals, target_crs)\n\n# Compute centroids of vulnerable tracts\ntract_vuln <- st_centroid(pa_tracts_vulnerable_proj) %>% filter(vulnerable)\n\n# Find nearest hospital for each vulnerable tract\nnearest_hospital_index <- st_nearest_feature(tract_vuln, hospitals_proj)\nnearest_hospitals <- hospitals_proj[nearest_hospital_index, ]\n\n# Compute distances in feet, convert to miles\ndist_ft <- st_distance(tract_vuln, nearest_hospitals, by_element = TRUE)\ntract_vuln$dist_to_hospital_miles <- as.numeric(dist_ft) / 5280\n\n# Summarize distances\navg_dist <- mean(tract_vuln$dist_to_hospital_miles, na.rm = TRUE)\nmax_dist <- max(tract_vuln$dist_to_hospital_miles, na.rm = TRUE)\nover15 <- sum(tract_vuln$dist_to_hospital_miles > 15, na.rm = TRUE)\n\ncat(\"Average distance to nearest hospital (miles):\", round(avg_dist, 2), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAverage distance to nearest hospital (miles): 3.1 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Maximum distance (miles):\", round(max_dist, 2), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMaximum distance (miles): 25.62 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Number of vulnerable tracts >15 miles from nearest hospital:\", over15, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNumber of vulnerable tracts >15 miles from nearest hospital: 22 \n```\n\n\n:::\n:::\n\n\n**Requirements:**\n- Projections and Calculating distances in miles\nI used Pennsylvania South projection so I could convert feet to miles. \n\n**Questions to answer:**\n- What is the average distance to the nearest hospital for vulnerable tracts?  3.1 miles\n- What is the maximum distance? The maximum distance is 25.62 miles.\n- How many vulnerable tracts are more than 15 miles from the nearest hospital? There are 22 vulnerable tracts that are more than 15 miles from the nearest hospital.\n\n---\n\n#### Step 5: Identify Underserved Areas \n\nDefine \"underserved\" as vulnerable tracts that are more than 15 miles from the nearest hospital.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create underserved variable\ntract_vuln <- tract_vuln %>%\n  mutate(\n    underserved = dist_to_hospital_miles > 15\n  )\n\nnum_underserved <- sum(tract_vuln$underserved, na.rm = TRUE)\ntotal_vulnerable <- nrow(tract_vuln)\npct_underserved <- (num_underserved / total_vulnerable) * 100\n```\n:::\n\n\n**Questions to answer:**\n- How many tracts are underserved? 22 are underserved\n- What percentage of vulnerable tracts are underserved? 2.60% of vulnerable tracts are underserved\n- Does this surprise you? Why or why not? I am pleasantly surprised that there is not a higher percentage of vulnerable tracts that are underserved especially with regards to income being a factor as this limits where one can live. \n---\n\n#### Step 6: Aggregate to County Level\n\nUse spatial joins and aggregation to calculate county-level statistics about vulnerable populations and hospital access.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Spatial join tracts to counties\npa_counties_proj <- st_transform(pa_counties, st_crs(tract_vuln))\n\ntracts_county <- st_join(\n  tract_vuln,\n  pa_counties_proj %>% select(COUNTY_NAM),\n  join = st_within\n)\n\n# Aggregate statistics by county\n\ncounty_stats <- tracts_county %>%\n  st_drop_geometry() %>%\n  group_by(COUNTY_NAM) %>%\n  summarise(\n    n_vulnerable_tracts = n(),\n    n_underserved_tracts = sum(underserved, na.rm = TRUE),\n    pct_underserved = 100 * n_underserved_tracts / n_vulnerable_tracts,\n    avg_dist_miles = mean(dist_to_hospital_miles, na.rm = TRUE),\n    total_vulnerable_pop = sum(pop_65plus, na.rm = TRUE)\n  ) %>%\n  arrange(desc(pct_underserved))\n\ntop5_pct_underserved <- county_stats %>%\n  slice_max(pct_underserved, n = 5) %>%\n  select(COUNTY_NAM, pct_underserved, n_vulnerable_tracts, n_underserved_tracts)\n\ntop5_pct_underserved\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  COUNTY_NAM pct_underserved n_vulnerable_tracts n_underserved_tracts\n  <chr>                <dbl>               <int>                <int>\n1 CAMERON              100                     1                    1\n2 FOREST               100                     2                    2\n3 SULLIVAN             100                     1                    1\n4 MONROE                66.7                   3                    2\n5 JUNIATA               50                     2                    1\n6 POTTER                50                     4                    2\n```\n\n\n:::\n\n```{.r .cell-code}\n# View top 5 counties by total vulnerable population\ntop5_vulnerable_pop <- county_stats %>%\n  slice_max(total_vulnerable_pop, n = 5) %>%\n  select(COUNTY_NAM, total_vulnerable_pop, n_underserved_tracts)\n\ntop5_vulnerable_pop\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  COUNTY_NAM   total_vulnerable_pop n_underserved_tracts\n  <chr>                       <dbl>                <int>\n1 PHILADELPHIA                99676                    0\n2 ALLEGHENY                   49662                    0\n3 LUZERNE                     21876                    0\n4 FAYETTE                     14733                    0\n5 WESTMORELAND                13989                    0\n```\n\n\n:::\n:::\n\nUse spatial joins and aggregation to calculate county-level statistics about vulnerable populations and hospital access.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n#Spatial Understanding of where vulnerable counties are \n\npa_counties_proj <- st_transform(pa_counties, st_crs(tract_vuln))\n\ntracts_county <- st_join(\n  tract_vuln,\n  pa_counties_proj %>% select(COUNTY_NAM),\n  join = st_within\n)\n\n# Convert underserved to numeric so sum() works\ntracts_county <- tracts_county %>%\n  mutate(underserved_num = ifelse(underserved, 1, 0))\n\n# Aggregate statistics by county\ncounty_stats <- tracts_county %>%\n  st_drop_geometry() %>%\n  group_by(COUNTY_NAM) %>%\n  summarise(\n    n_vulnerable_tracts = n(),\n    n_underserved_tracts = sum(underserved_num, na.rm = TRUE),\n    pct_underserved = 100 * n_underserved_tracts / n_vulnerable_tracts,\n    avg_dist_miles = mean(dist_to_hospital_miles, na.rm = TRUE),\n    total_vulnerable_pop = sum(pop_65plus, na.rm = TRUE)\n  ) %>%\n  arrange(desc(pct_underserved))\n\n# View top 5 counties by pct underserved\ntop5_pct_underserved <- county_stats %>%\n  slice_max(pct_underserved, n = 5) %>%\n  select(COUNTY_NAM, pct_underserved, n_vulnerable_tracts, n_underserved_tracts)\n\ntop5_pct_underserved\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  COUNTY_NAM pct_underserved n_vulnerable_tracts n_underserved_tracts\n  <chr>                <dbl>               <int>                <dbl>\n1 CAMERON              100                     1                    1\n2 FOREST               100                     2                    2\n3 SULLIVAN             100                     1                    1\n4 MONROE                66.7                   3                    2\n5 JUNIATA               50                     2                    1\n6 POTTER                50                     4                    2\n```\n\n\n:::\n\n```{.r .cell-code}\n#to understand spatial patterns\nlibrary(ggplot2)\n\npa_counties_plot <- pa_counties_proj %>%\n  left_join(county_stats, by = \"COUNTY_NAM\")\n\n# Map: percent of vulnerable tracts that are underserved\nggplot(pa_counties_plot) +\n  geom_sf(aes(fill = pct_underserved), color = \"white\") +\n  scale_fill_viridis_c(option = \"magma\", direction = -1, \n                       na.value = \"grey90\", name = \"% Underserved\") +\n  labs(\n    title = \"Percent of Vulnerable Counties Underserved by Hospitals\",\n    subtitle = \"Pennsylvania Counties\",\n    caption = \"Data: Vulnerable tracts (>65+ elderly & low income) & hospital locations\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16),\n    plot.subtitle = element_text(size = 12)\n  )\n```\n\n::: {.cell-output-display}\n![](Ramirez_Ixchel_assignment2_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n**Required county-level statistics:**\n- Number of vulnerable tracts\n- Number of underserved tracts  \n- Percentage of vulnerable tracts that are underserved\n- Average distance to nearest hospital for vulnerable tracts\n- Total vulnerable population\n\n**Questions to answer:**\n- Which 5 counties have the highest percentage of underserved vulnerable tracts? \nCAMERON\t\t\nFOREST\t\t\nSULLIVAN\t\t\nMONROE\t\t\nJUNIATA\t\t\nPOTTER\n\n- Which counties have the most vulnerable people living far from hospitals?\nThe counties with the most vulnerable people living far from hospitals are:\nPHILADELPHIA\t\t\nALLEGHENY\t\t\nLUZERNE\t\t\nFAYETTE\t\nWESTMORELAND\n\n- Are there any patterns in where underserved counties are located?\nThe underserved counties are mainly in the northern half of the state  \n---\n\n#### Step 7: Create Summary Table \n\nCreate a professional table showing the top 10 priority counties for healthcare investment.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create and format priority counties table\ncounty_stats_2 <- county_stats %>%\n  mutate(\n    priority_score = n_vulnerable_tracts * 0.6 + total_vulnerable_pop * 0.4  # example weighting\n  )\n\nlibrary(scales)\n\n# Select top 10 priority counties\ntop10_priority <- county_stats_2 %>%\n  arrange(desc(priority_score)) %>%\n  slice(1:10) %>%\n  select(\n    County = COUNTY_NAM,\n    `Vulnerable & Remote Tracts` = n_vulnerable_tracts,\n    `Total Vulnerable Population` = total_vulnerable_pop,\n    `Priority Score` = priority_score\n  ) %>%\n  mutate(\n    `Total Vulnerable Population` = comma(`Total Vulnerable Population`),\n    `Priority Score` = round(`Priority Score`, 1)\n  )\n\n\n# Display professional table\nkable(\n  top10_priority,\n  caption = \"Top 10 Priority Counties for Healthcare Investment in Pennsylvania\",\n  align = c(\"l\", \"c\", \"c\", \"c\"),\n  digits = 0\n)\n```\n\n::: {.cell-output-display}\n\n\nTable: Top 10 Priority Counties for Healthcare Investment in Pennsylvania\n\n|County       | Vulnerable & Remote Tracts | Total Vulnerable Population | Priority Score |\n|:------------|:--------------------------:|:---------------------------:|:--------------:|\n|PHILADELPHIA |            177             |           99,676            |     39977      |\n|ALLEGHENY    |            110             |           49,662            |     19931      |\n|LUZERNE      |             40             |           21,876            |      8774      |\n|FAYETTE      |             18             |           14,733            |      5904      |\n|WESTMORELAND |             29             |           13,989            |      5613      |\n|ERIE         |             31             |           13,781            |      5531      |\n|DELAWARE     |             30             |           12,349            |      4958      |\n|LEHIGH       |             22             |           12,087            |      4848      |\n|LACKAWANNA   |             22             |           11,097            |      4452      |\n|CLEARFIELD   |             12             |            9,016            |      3614      |\n\n\n:::\n:::\n\n\n\n---\n\n## Part 2: Comprehensive Visualization \n### Map 1: County-Level Choropleth \n\nCreate a choropleth map showing healthcare access challenges at the county level.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create county-level access map\n\nlibrary(viridis)\n\n# Merge county statistics back to county geometries\npa_counties_plot <- pa_counties_proj %>%\n  left_join(county_stats_2, by = c(\"COUNTY_NAM\"))\n\n# Map: percent of vulnerable tracts underserved with hospital locations\nggplot(pa_counties_plot) +\n  # Counties filled by percent underserved\n  geom_sf(aes(fill = pct_underserved), color = \"transparent\") +\n  \n  # Hospitals as points\n  geom_sf(data = hospitals_proj, color = \"red\", size = 2, shape = 21, fill = \"red\") +\n  \n  # Color scale\n  scale_fill_viridis_c(\n    option = \"Blues\",\n    direction = -1,\n    na.value = \"grey80\",\n    name = \"% Vulnerable Tracts Underserved\"\n  ) +\n  \n  # Titles and caption\n  labs(\n    title = \"Healthcare Access Challenges Across Pennsylvania Counties\",\n    subtitle = \"Percent of vulnerable tracts underserved by hospitals (>15 miles away)\",\n    caption = \"Data Sources: ACS 2022, Pennsylvania Hospitals\"\n  ) +\n  \n  # Clean theme\n  theme_void() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16),\n    plot.subtitle = element_text(size = 12),\n    plot.caption = element_text(size = 9),\n    legend.position = \"right\"\n  )\n```\n\n::: {.cell-output-display}\n![](Ramirez_Ixchel_assignment2_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n---\n\n### Map 2: Detailed Vulnerability Map \n\nCreate a map highlighting underserved vulnerable tracts.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create distribution visualization\n### Map 2: Detailed Vulnerability Map (Robust Version)\ntract_vuln <- tract_vuln %>% \n  filter(!st_is_empty(geometry)) %>% \n  st_make_valid()\n\npa_counties_proj <- pa_counties_proj %>%\n  filter(!st_is_empty(geometry)) %>%\n  st_make_valid()\n\nhospitals_proj <- hospitals_proj %>%\n  filter(!st_is_empty(geometry)) %>%\n  st_make_valid()\n\ntracts_vulnerable_only <- tract_vuln %>% \n  filter(vulnerable == TRUE) %>%\n  st_as_sf()\n\ntracts_underserved <- tract_vuln %>% \n  filter(underserved == TRUE) %>%\n  st_as_sf()\n\n\nst_is_valid(tracts_vulnerable_only) %>% table()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n.\nTRUE \n 850 \n```\n\n\n:::\n\n```{.r .cell-code}\ntracts_vulnerable_only <- tracts_vulnerable_only %>%\n  filter(!st_is_empty(geometry), !is.na(st_dimension(geometry)))\nnrow(tracts_vulnerable_only)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 850\n```\n\n\n:::\n\n```{.r .cell-code}\nsum(st_is_empty(tracts_vulnerable_only))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(tracts_vulnerable_only)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\"\n```\n\n\n:::\n\n```{.r .cell-code}\nst_geometry(tracts_vulnerable_only)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeometry set for 850 features \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 1207878 ymin: 155878.3 xmax: 2750201 ymax: 1032054\nProjected CRS: NAD83 / Pennsylvania South (ftUS)\nFirst 5 geometries:\n```\n\n\n:::\n\n```{.r .cell-code}\n#trial plot\n\nst_geometry(census_tracts)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeometry set for 3445 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -8963433 ymin: 4825308 xmax: -8314399 ymax: 5201489\nProjected CRS: WGS 84 / Pseudo-Mercator\nFirst 5 geometries:\n```\n\n\n:::\n\n```{.r .cell-code}\ntracts_vulnerable_only <- census_tracts %>%\n  left_join(tracts_vulnerable_only %>% st_drop_geometry(), by = \"GEOID\") %>%\n  filter(vulnerable == TRUE)\n\n#refinement\ntracts_vulnerable_only <- tracts_vulnerable_only %>%\n  mutate(category = case_when(\n    underserved == TRUE ~ \"Underserved\",\n    vulnerable == TRUE ~ \"Vulnerable\",\n    TRUE ~ \"Other\"\n  ))\n\n\nggplot() +\n  geom_sf(data = pa_counties_proj, fill = \"grey95\", color = \"darkgrey\", size = 0.2) +\n  geom_sf(data = tracts_vulnerable_only, aes(fill = category), color = NA, alpha = 0.7) +\n  geom_sf(data = hospitals_proj, color = \"grey18\", fill = \"grey22\", shape = 21, size = 1) +\n  scale_fill_manual(\n    values = c(\n      \"Underserved\" = \"red\",\n      \"Vulnerable\" = \"firebrick4\",\n      \"Other\" = \"grey90\"\n    ),\n    name = \"Tract Category\"\n  ) +\n  labs(\n    title = \"Underserved and Vulnerable Populations in Pennsylvania\",\n    subtitle = \"Census tracts with elderly + low-income residents more than 15 miles from a hospital\",\n    caption = \"Data: ACS 2022, Pennsylvania Hospitals\"\n  ) +\n  theme_void() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16),\n    plot.subtitle = element_text(size = 12),\n    legend.position = \"bottom\",\n    legend.title = element_text(face = \"bold\"),\n    panel.grid = element_blank() \n  )\n```\n\n::: {.cell-output-display}\n![](Ramirez_Ixchel_assignment2_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\n**Requirements:**\nI used a bright red to distinguish underserved vulnerable tracts, which are easy to see in contrast to the other tracts and the hospitals which are all darker tones. \n\n---\n\n### Chart: Distribution Analysis\n\nCreate a visualization showing the distribution of distances to hospitals for vulnerable populations.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create distribution visualization\n\nggplot(tract_vuln, aes(x = dist_to_hospital_miles)) +\n  geom_histogram(binwidth = 2, fill = \"steelblue\", color = \"white\", alpha = 0.8) +\n  geom_vline(xintercept = 15, linetype = \"dashed\", color = \"red\", size = 1) +\n  labs(\n    title = \"Distribution of Distances to Nearest Hospital (Vulnerable Tracts)\",\n    x = \"Distance to Nearest Hospital (miles)\",\n    y = \"Number of Vulnerable Tracts\",\n    caption = \"Dashed line = 15-mile underserved threshold\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Ramirez_Ixchel_assignment2_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n**Requirements:**\n- Brief interpretation \nMost vulnerable tracts are within a 15 miles of a hospital, a small portion of them are further than 15 miles from a hospital.\n\n---\n\n## Part 3: Bring Your Own Data Analysis \n\n### Challenge Options\n\n### Your Analysis\n\n**Your Task:**\n\n**Option B: School Safety Zones**\n- **Data:** Schools, Crime Incidents, Bike Network\n- **Question:** \"Are school zones safe for walking/biking, or are they crime hotspots?\"\n- **Operations:** Buffer schools (1000ft safety zone), spatial join with crime incidents, assess bike infrastructure coverage\n- **Policy relevance:** Safe Routes to School programs, crossing guard placement\n\n\n1. All three data sets come from **OpenDataPhilly:** https://opendataphilly.org/datasets/\n**Find and load additional data**\n   - Document your data source\n   - Check and standardize the CRS\n   - Provide basic summary statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load your additional dataset\n\nschools <- st_read(\"C:/Users/ixche/Desktop/PPA/Working Files/lab_2/Schools.geojson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Schools' from data source \n  `C:\\Users\\ixche\\Desktop\\PPA\\Working Files\\lab_2\\Schools.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 495 features and 14 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -75.2665 ymin: 39.90781 xmax: -74.97057 ymax: 40.12974\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\ncrime <- st_read(\"C:/Users/ixche/Desktop/PPA/Working Files/lab_2/incidents_part1_part2 (2)/incidents_part1_part2.shp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `incidents_part1_part2' from data source \n  `C:\\Users\\ixche\\Desktop\\PPA\\Working Files\\lab_2\\incidents_part1_part2 (2)\\incidents_part1_part2.shp' \n  using driver `ESRI Shapefile'\nreplacing null geometries with empty geometries\nSimple feature collection with 122811 features and 13 fields (with 3146 geometries empty)\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -75.27421 ymin: 5.684342e-14 xmax: 5.684342e-14 ymax: 40.13683\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nbikenetwork <- st_read(\"C:/Users/ixche/Desktop/PPA/Working Files/lab_2/Bike_Network.geojson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Bike_Network' from data source \n  `C:\\Users\\ixche\\Desktop\\PPA\\Working Files\\lab_2\\Bike_Network.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 5225 features and 8 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: -75.26927 ymin: 39.87528 xmax: -74.96572 ymax: 40.124\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\ntarget_crs <- st_crs(2272)\nschools <- st_transform(schools, target_crs)\ncrime <- st_transform(crime, target_crs)\nbikenetwork <- st_transform(bikenetwork, target_crs)\n\nsummary(schools)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      aun              school_num   location_id        school_name       \n Min.   :100510000   Min.   :3445   Length:495         Length:495        \n 1st Qu.:126515001   1st Qu.:3752   Class :character   Class :character  \n Median :126515001   Median :6527   Mode  :character   Mode  :character  \n Mean   :163032553   Mean   :5776                                        \n 3rd Qu.:226511157   3rd Qu.:7664                                        \n Max.   :326517786   Max.   :8493                                        \n NA's   :51          NA's   :208                                         \n school_name_label  street_address       zip_code         phone_number      \n Length:495         Length:495         Length:495         Length:495        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n grade_level         grade_org           enrollment          type      \n Length:495         Length:495         Min.   :   1.0   Min.   :1.000  \n Class :character   Class :character   1st Qu.: 270.0   1st Qu.:1.000  \n Mode  :character   Mode  :character   Median : 446.0   Median :1.000  \n                                       Mean   : 548.5   Mean   :1.768  \n                                       3rd Qu.: 656.0   3rd Qu.:3.000  \n                                       Max.   :3467.0   Max.   :3.000  \n                                       NA's   :162                     \n type_specific         objectid              geometry  \n Length:495         Min.   :  1.0   POINT        :495  \n Class :character   1st Qu.:124.5   epsg:2272    :  0  \n Mode  :character   Median :248.0   +proj=lcc ...:  0  \n                    Mean   :248.0                      \n                    3rd Qu.:371.5                      \n                    Max.   :495.0                      \n                                                       \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(crime)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    objectid          dc_dist              psa              dispatch_d        \n Min.   :24039329   Length:122811      Length:122811      Min.   :2025-01-01  \n 1st Qu.:27844661   Class :character   Class :character   1st Qu.:2025-03-26  \n Median :30309477   Mode  :character   Mode  :character   Median :2025-06-06  \n Mean   :29829120                                         Mean   :2025-06-01  \n 3rd Qu.:32628090                                         3rd Qu.:2025-08-11  \n Max.   :32887806                                         Max.   :2025-10-19  \n                                                                              \n  dispatch_1         dispatch_t             hour           dc_key         \n Length:122811      Length:122811      Min.   : 0.00   Min.   :2.023e+11  \n Class :character   Class :character   1st Qu.: 9.00   1st Qu.:2.025e+11  \n Mode  :character   Mode  :character   Median :13.00   Median :2.025e+11  \n                                       Mean   :13.07   Mean   :2.042e+11  \n                                       3rd Qu.:17.00   3rd Qu.:2.025e+11  \n                                       Max.   :23.00   Max.   :2.025e+14  \n                                                                          \n  location_b         ucr_genera         text_gener           point_x         \n Length:122811      Length:122811      Length:122811      Min.   :    -75.3  \n Class :character   Class :character   Class :character   1st Qu.:    -75.2  \n Mode  :character   Mode  :character   Mode  :character   Median :    -75.2  \n                                                          Mean   :   7552.7  \n                                                          3rd Qu.:    -75.1  \n                                                          Max.   :2746280.6  \n                                                          NA's   :3144       \n    point_y                   geometry     \n Min.   :     0.00   POINT        :122811  \n 1st Qu.:    39.96   epsg:2272    :     0  \n Median :    39.99   +proj=lcc ...:     0  \n Mean   :   754.17                         \n 3rd Qu.:    40.03                         \n Max.   :301244.66                         \n NA's   :3144                              \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(bikenetwork)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    OBJECTID        SEG_ID         STREETNAME           ST_CODE     \n Min.   :   1   Min.   : 100002   Length:5225        Min.   : 9205  \n 1st Qu.:1307   1st Qu.: 400465   Class :character   1st Qu.:41240  \n Median :2613   Median : 500410   Mode  :character   Median :64820  \n Mean   :2613   Mean   : 542578                      Mean   :59609  \n 3rd Qu.:3919   3rd Qu.: 721062                      3rd Qu.:81600  \n Max.   :5225   Max.   :1180077                      Max.   :89710  \n    ONEWAY              CLASS           TYPE           Shape__Length     \n Length:5225        Min.   :2.000   Length:5225        Min.   :   6.267  \n Class :character   1st Qu.:2.000   Class :character   1st Qu.:  70.212  \n Mode  :character   Median :3.000   Mode  :character   Median : 103.781  \n                    Mean   :2.929                      Mean   : 137.857  \n                    3rd Qu.:4.000                      3rd Qu.: 177.150  \n                    Max.   :9.000                      Max.   :1673.993  \n          geometry   \n LINESTRING   :5225  \n epsg:2272    :   0  \n +proj=lcc ...:   0  \n                     \n                     \n                     \n```\n\n\n:::\n:::\n\n\n**Questions to answer:**\n- What dataset did you choose and why?\nThe datasets I used are Crime Incidents, Bike Network and Schools from OpenDataPhilly.\n\n- What is the data source and date?\nThe data source is OpenDataPhilly and it was accessed on October 19.\n\n- How many features does it contain?\nBikenetwork contains 9 variables, crime contains 14 variables and schools contains 15 variables.\n\n- What CRS is it in? Did you need to transform it?\nThe CRS was WGS 84, I transformed it for additional practice but they were all in the same coordinate reference system.\n---\n\n2. **Pose a research question**\nAre school zones safe for walking/biking, or are they crime hotspots?\n\n---\n\n3. **Conduct spatial analysis**\n\nI am using buffers and spatial joins to complete my analysis. \n\n**Your Task: Setting up the Data**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Your spatial analysis\n\nschool_buffers <- st_buffer(schools, dist = 1000)  # creates a 1000 ft safety zone around schools\n\nschool_buffers <- school_buffers %>%\n  rename(school_id = objectid) #rename the school ids so the columns have different names\n\ncrime <- crime %>%\n  rename(crime_id = objectid)\nschool_crime_counts <- st_join(school_buffers, crime, join = st_contains) %>%\n  group_by(school_id, school_name) %>%  # Use unique school ID\n  summarise(\n    n_crimes = n(),\n    .groups = \"drop\"\n  )\n\n#including the coverage of the bike network in Philly\nbike_in_buffers <- st_intersection(bikenetwork, school_buffers)\n\nbike_length_per_school <- bike_in_buffers %>%\n  group_by(school_id, school_name) %>%\n  summarise(\n    bike_length_ft = sum(st_length(geometry)),\n    .groups = \"drop\"\n  )\n\n#Bringing all the data together\n# Drop geometry for bike summary\nbike_length_per_school_df <- bike_length_per_school %>%\n  st_drop_geometry()\n\n# Now join safely\nschool_safety_summary <- school_crime_counts %>%\n  left_join(bike_length_per_school_df, by = c(\"school_id\", \"school_name\")) %>%\n  mutate(bike_length_ft = ifelse(is.na(bike_length_ft), 0, bike_length_ft))\n\n#Map of findings\nlibrary(ggplot2)\nlibrary(scales)\n\nschool_crime_counts_df <- st_drop_geometry(school_crime_counts)\n\n# Merge crime counts to school buffers for plotting\nschool_buffers_plot <- school_buffers %>%\n  left_join(school_crime_counts_df, by = c(\"school_id\", \"school_name\"))\n\nschool_buffers_plot <- school_buffers_plot %>%\n  mutate(n_crimes = ifelse(is.na(n_crimes), 0, n_crimes))\n\n# Highlight variation (e.g., sqrt)\nschool_buffers_plot <- school_buffers_plot %>%\n  mutate(n_crimes_sqrt = sqrt(n_crimes))\n```\n:::\n\n\n**Mapping**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Your spatial analysis\n\nggplot(school_buffers_plot) +\n  geom_sf(aes(fill = n_crimes), color = NA) +\n  scale_fill_viridis_c(option = \"inferno\", name = \"Crime Count\") +\n  labs(\n    title = \"Philadelphia School Safety Zones\",\n    subtitle = \"Crime incidents within 1000 ft of schools\",\n    caption = \"Source: OpenDataPhilly (2025)\"\n  ) +\n  theme_void() +\n  theme(\n    legend.position = \"right\",\n    plot.title = element_text(face = \"bold\", size = 16),\n    plot.subtitle = element_text(size = 12)\n  )\n```\n\n::: {.cell-output-display}\n![](Ramirez_Ixchel_assignment2_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Ensure both layers have the same CRS\nbikenetwork <- st_transform(bikenetwork, st_crs(school_buffers_plot))\n\n# --- 1. Intersect bike network with school buffers ---\n# This keeps only the bike segments that fall within 1000 ft of schools\nbike_in_buffers <- st_intersection(bikenetwork, school_buffers_plot)\n\n# --- 2. Map: Crime gradient + bike network inside buffers ---\nggplot() +\n  # School buffer polygons shaded by number of crimes\n  geom_sf(data = school_buffers_plot, aes(fill = n_crimes), color = NA) +\n  \n  # Bike network segments within buffers (cyan lines)\n  geom_sf(\n    data = bike_in_buffers,\n    color = \"cyan3\",\n    size = 0.6,\n    alpha = 0.8\n  ) +\n  \n  # Color scale for crime density\n  scale_fill_viridis_c(option = \"inferno\", name = \"Crime Count\") +\n  \n  # Titles and labels\n  labs(\n    title = \"Philadelphia School Safety Zones and Bike Network Coverage\",\n    subtitle = \"Bike network segments within 1000 ft of schools overlaid on crime density\",\n    caption = \"Source: OpenDataPhilly (2025)\"\n  ) +\n  \n  # Minimal map style\n  theme_void() +\n  theme(\n    legend.position = \"right\",\n    plot.title = element_text(face = \"bold\", size = 16),\n    plot.subtitle = element_text(size = 12)\n  )\n```\n\n::: {.cell-output-display}\n![](Ramirez_Ixchel_assignment2_files/figure-html/unnamed-chunk-14-2.png){width=672}\n:::\n:::\n\n\n**Summary Statistics and Counts**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summary Statistics for School Safety Analysis\n\n# 1. Total number of schools analyzed\nn_schools <- nrow(school_crime_counts)\n\n# 2. Total number of crimes within 1000 ft of schools\ntotal_crimes <- sum(school_crime_counts$n_crimes, na.rm = TRUE)\n\n# 3. Average number of crimes per school buffer\navg_crimes_per_school <- mean(school_crime_counts$n_crimes, na.rm = TRUE)\n\n# 4. Number (and percent) of schools with *zero* nearby crimes\nschools_no_crime <- sum(school_crime_counts$n_crimes == 0, na.rm = TRUE)\npct_no_crime <- round(100 * schools_no_crime / n_schools, 1)\n\n# 5. Bike network coverage summary\ntotal_bike_length <- sum(bike_length_per_school$bike_length_ft, na.rm = TRUE)\navg_bike_length <- mean(bike_length_per_school$bike_length_ft, na.rm = TRUE)\n\n#simple summary table\nsummary_table <- data.frame(\n  Metric = c(\n    \"Total schools analyzed\",\n    \"Total crimes within 1000 ft\",\n    \"Average crimes per school\",\n    \"Schools with no nearby crimes\",\n    \"Percent of schools with no nearby crimes\",\n    \"Total bike network length within 1000 ft (ft)\",\n    \"Average bike network length per school (ft)\"\n  ),\n  Value = c(\n    n_schools,\n    total_crimes,\n    round(avg_crimes_per_school, 1),\n    schools_no_crime,\n    paste0(pct_no_crime, \"%\"),\n    round(total_bike_length, 0),\n    round(avg_bike_length, 0)\n  )\n)\n\n# Display the table nicely\nlibrary(knitr)\nkable(summary_table, caption = \"Summary of School Zone Safety and Bike Access in Philadelphia\")\n```\n\n::: {.cell-output-display}\n\n\nTable: Summary of School Zone Safety and Bike Access in Philadelphia\n\n|Metric                                        |Value   |\n|:---------------------------------------------|:-------|\n|Total schools analyzed                        |495     |\n|Total crimes within 1000 ft                   |87665   |\n|Average crimes per school                     |177.1   |\n|Schools with no nearby crimes                 |0       |\n|Percent of schools with no nearby crimes      |0%      |\n|Total bike network length within 1000 ft (ft) |1092609 |\n|Average bike network length per school (ft)   |2759    |\n\n\n:::\n:::\n\n\n**Analysis requirements:**\n- Clear code comments explaining each step\n- Appropriate CRS transformations\n- Summary statistics or counts\n- At least one map showing your findings\n- Brief interpretation of results (3-5 sentences)\n\n**Your interpretation:**\nSchool zones are generally safe for biking and walking. Only 3 of the points in the 1000ft of school buffers have a 1000 or more crime incidents. The average number of crimes per school is 177 which is 0.14% of the crimes in Philadelphia. Since Philadelphia has 495 located throughout the city, this accounts for the high number for total crimes within 1000 feet of a school, which means it is more helpful to look at general trends of crime per school than this number alone.\n\n\n## Finally - A few comments about your incorporation of feedback!\nI deleted additional instructions and added additional headers to help with readability. \n\n\n",
    "supporting": [
      "Ramirez_Ixchel_assignment2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}